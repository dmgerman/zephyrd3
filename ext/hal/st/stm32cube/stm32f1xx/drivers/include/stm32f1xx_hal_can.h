DECL|ABOM|member|uint32_t ABOM; /*!< Enable or disable the automatic bus-off management.
DECL|AWUM|member|uint32_t AWUM; /*!< Enable or disable the automatic wake-up mode.
DECL|BS1|member|uint32_t BS1; /*!< Specifies the number of time quanta in Bit Segment 1.
DECL|BS2|member|uint32_t BS2; /*!< Specifies the number of time quanta in Bit Segment 2.
DECL|CAN_BS1_10TQ|macro|CAN_BS1_10TQ
DECL|CAN_BS1_11TQ|macro|CAN_BS1_11TQ
DECL|CAN_BS1_12TQ|macro|CAN_BS1_12TQ
DECL|CAN_BS1_13TQ|macro|CAN_BS1_13TQ
DECL|CAN_BS1_14TQ|macro|CAN_BS1_14TQ
DECL|CAN_BS1_15TQ|macro|CAN_BS1_15TQ
DECL|CAN_BS1_16TQ|macro|CAN_BS1_16TQ
DECL|CAN_BS1_1TQ|macro|CAN_BS1_1TQ
DECL|CAN_BS1_2TQ|macro|CAN_BS1_2TQ
DECL|CAN_BS1_3TQ|macro|CAN_BS1_3TQ
DECL|CAN_BS1_4TQ|macro|CAN_BS1_4TQ
DECL|CAN_BS1_5TQ|macro|CAN_BS1_5TQ
DECL|CAN_BS1_6TQ|macro|CAN_BS1_6TQ
DECL|CAN_BS1_7TQ|macro|CAN_BS1_7TQ
DECL|CAN_BS1_8TQ|macro|CAN_BS1_8TQ
DECL|CAN_BS1_9TQ|macro|CAN_BS1_9TQ
DECL|CAN_BS2_1TQ|macro|CAN_BS2_1TQ
DECL|CAN_BS2_2TQ|macro|CAN_BS2_2TQ
DECL|CAN_BS2_3TQ|macro|CAN_BS2_3TQ
DECL|CAN_BS2_4TQ|macro|CAN_BS2_4TQ
DECL|CAN_BS2_5TQ|macro|CAN_BS2_5TQ
DECL|CAN_BS2_6TQ|macro|CAN_BS2_6TQ
DECL|CAN_BS2_7TQ|macro|CAN_BS2_7TQ
DECL|CAN_BS2_8TQ|macro|CAN_BS2_8TQ
DECL|CAN_ESR_BOF_BIT_POSITION|macro|CAN_ESR_BOF_BIT_POSITION
DECL|CAN_ESR_EPV_BIT_POSITION|macro|CAN_ESR_EPV_BIT_POSITION
DECL|CAN_ESR_EWG_BIT_POSITION|macro|CAN_ESR_EWG_BIT_POSITION
DECL|CAN_FIFO0|macro|CAN_FIFO0
DECL|CAN_FIFO1|macro|CAN_FIFO1
DECL|CAN_FILTERMODE_IDLIST|macro|CAN_FILTERMODE_IDLIST
DECL|CAN_FILTERMODE_IDMASK|macro|CAN_FILTERMODE_IDMASK
DECL|CAN_FILTERSCALE_16BIT|macro|CAN_FILTERSCALE_16BIT
DECL|CAN_FILTERSCALE_32BIT|macro|CAN_FILTERSCALE_32BIT
DECL|CAN_FILTER_FIFO0|macro|CAN_FILTER_FIFO0
DECL|CAN_FILTER_FIFO1|macro|CAN_FILTER_FIFO1
DECL|CAN_FLAG_BOF|macro|CAN_FLAG_BOF
DECL|CAN_FLAG_EPV|macro|CAN_FLAG_EPV
DECL|CAN_FLAG_EWG|macro|CAN_FLAG_EWG
DECL|CAN_FLAG_FF0|macro|CAN_FLAG_FF0
DECL|CAN_FLAG_FF1|macro|CAN_FLAG_FF1
DECL|CAN_FLAG_FOV0|macro|CAN_FLAG_FOV0
DECL|CAN_FLAG_FOV1|macro|CAN_FLAG_FOV1
DECL|CAN_FLAG_MASK|macro|CAN_FLAG_MASK
DECL|CAN_FLAG_RQCP0|macro|CAN_FLAG_RQCP0
DECL|CAN_FLAG_RQCP1|macro|CAN_FLAG_RQCP1
DECL|CAN_FLAG_RQCP2|macro|CAN_FLAG_RQCP2
DECL|CAN_FLAG_SLAKI|macro|CAN_FLAG_SLAKI
DECL|CAN_FLAG_SLAK|macro|CAN_FLAG_SLAK
DECL|CAN_FLAG_TME0|macro|CAN_FLAG_TME0
DECL|CAN_FLAG_TME1|macro|CAN_FLAG_TME1
DECL|CAN_FLAG_TME2|macro|CAN_FLAG_TME2
DECL|CAN_FLAG_TXOK0|macro|CAN_FLAG_TXOK0
DECL|CAN_FLAG_TXOK1|macro|CAN_FLAG_TXOK1
DECL|CAN_FLAG_TXOK2|macro|CAN_FLAG_TXOK2
DECL|CAN_FLAG_WKU|macro|CAN_FLAG_WKU
DECL|CAN_HandleTypeDef|typedef|}CAN_HandleTypeDef;
DECL|CAN_ID_EXT|macro|CAN_ID_EXT
DECL|CAN_ID_STD|macro|CAN_ID_STD
DECL|CAN_INITSTATUS_FAILED|macro|CAN_INITSTATUS_FAILED
DECL|CAN_INITSTATUS_SUCCESS|macro|CAN_INITSTATUS_SUCCESS
DECL|CAN_IT_BOF|macro|CAN_IT_BOF
DECL|CAN_IT_EPV|macro|CAN_IT_EPV
DECL|CAN_IT_ERR|macro|CAN_IT_ERR
DECL|CAN_IT_EWG|macro|CAN_IT_EWG
DECL|CAN_IT_FF0|macro|CAN_IT_FF0
DECL|CAN_IT_FF1|macro|CAN_IT_FF1
DECL|CAN_IT_FMP0|macro|CAN_IT_FMP0
DECL|CAN_IT_FMP1|macro|CAN_IT_FMP1
DECL|CAN_IT_FOV0|macro|CAN_IT_FOV0
DECL|CAN_IT_FOV1|macro|CAN_IT_FOV1
DECL|CAN_IT_LEC|macro|CAN_IT_LEC
DECL|CAN_IT_SLK|macro|CAN_IT_SLK
DECL|CAN_IT_TME|macro|CAN_IT_TME
DECL|CAN_IT_WKU|macro|CAN_IT_WKU
DECL|CAN_InitTypeDef|typedef|}CAN_InitTypeDef;
DECL|CAN_MODE_LOOPBACK|macro|CAN_MODE_LOOPBACK
DECL|CAN_MODE_NORMAL|macro|CAN_MODE_NORMAL
DECL|CAN_MODE_SILENT_LOOPBACK|macro|CAN_MODE_SILENT_LOOPBACK
DECL|CAN_MODE_SILENT|macro|CAN_MODE_SILENT
DECL|CAN_MSR_SLAKI_BIT_POSITION|macro|CAN_MSR_SLAKI_BIT_POSITION
DECL|CAN_MSR_SLAK_BIT_POSITION|macro|CAN_MSR_SLAK_BIT_POSITION
DECL|CAN_MSR_WKU_BIT_POSITION|macro|CAN_MSR_WKU_BIT_POSITION
DECL|CAN_RF0R_FF0_BIT_POSITION|macro|CAN_RF0R_FF0_BIT_POSITION
DECL|CAN_RF0R_FOV0_BIT_POSITION|macro|CAN_RF0R_FOV0_BIT_POSITION
DECL|CAN_RF1R_FF1_BIT_POSITION|macro|CAN_RF1R_FF1_BIT_POSITION
DECL|CAN_RF1R_FOV1_BIT_POSITION|macro|CAN_RF1R_FOV1_BIT_POSITION
DECL|CAN_RTR_DATA|macro|CAN_RTR_DATA
DECL|CAN_RTR_REMOTE|macro|CAN_RTR_REMOTE
DECL|CAN_SJW_1TQ|macro|CAN_SJW_1TQ
DECL|CAN_SJW_2TQ|macro|CAN_SJW_2TQ
DECL|CAN_SJW_3TQ|macro|CAN_SJW_3TQ
DECL|CAN_SJW_4TQ|macro|CAN_SJW_4TQ
DECL|CAN_TSR_RQCP0_BIT_POSITION|macro|CAN_TSR_RQCP0_BIT_POSITION
DECL|CAN_TSR_RQCP1_BIT_POSITION|macro|CAN_TSR_RQCP1_BIT_POSITION
DECL|CAN_TSR_RQCP2_BIT_POSITION|macro|CAN_TSR_RQCP2_BIT_POSITION
DECL|CAN_TSR_TME0_BIT_POSITION|macro|CAN_TSR_TME0_BIT_POSITION
DECL|CAN_TSR_TME1_BIT_POSITION|macro|CAN_TSR_TME1_BIT_POSITION
DECL|CAN_TSR_TME2_BIT_POSITION|macro|CAN_TSR_TME2_BIT_POSITION
DECL|CAN_TSR_TXOK0_BIT_POSITION|macro|CAN_TSR_TXOK0_BIT_POSITION
DECL|CAN_TSR_TXOK1_BIT_POSITION|macro|CAN_TSR_TXOK1_BIT_POSITION
DECL|CAN_TSR_TXOK2_BIT_POSITION|macro|CAN_TSR_TXOK2_BIT_POSITION
DECL|CAN_TXMAILBOX_0|macro|CAN_TXMAILBOX_0
DECL|CAN_TXMAILBOX_1|macro|CAN_TXMAILBOX_1
DECL|CAN_TXMAILBOX_2|macro|CAN_TXMAILBOX_2
DECL|CAN_TXSTATUS_NOMAILBOX|macro|CAN_TXSTATUS_NOMAILBOX
DECL|CanRxMsgTypeDef|typedef|}CanRxMsgTypeDef;
DECL|CanTxMsgTypeDef|typedef|}CanTxMsgTypeDef;
DECL|DLC|member|uint32_t DLC; /*!< Specifies the length of the frame that will be received.
DECL|DLC|member|uint32_t DLC; /*!< Specifies the length of the frame that will be transmitted.
DECL|Data|member|uint8_t Data[8]; /*!< Contains the data to be received.
DECL|Data|member|uint8_t Data[8]; /*!< Contains the data to be transmitted.
DECL|ESR_REGISTER_INDEX|macro|ESR_REGISTER_INDEX
DECL|ErrorCode|member|__IO uint32_t ErrorCode; /*!< CAN Error code */
DECL|ExtId|member|uint32_t ExtId; /*!< Specifies the extended identifier.
DECL|ExtId|member|uint32_t ExtId; /*!< Specifies the extended identifier.
DECL|FIFONumber|member|uint32_t FIFONumber; /*!< Specifies the receive FIFO number.
DECL|FMI|member|uint32_t FMI; /*!< Specifies the index of the filter the message stored in the mailbox passes through.
DECL|HAL_CAN_ERROR_ACK|macro|HAL_CAN_ERROR_ACK
DECL|HAL_CAN_ERROR_BD|macro|HAL_CAN_ERROR_BD
DECL|HAL_CAN_ERROR_BOF|macro|HAL_CAN_ERROR_BOF
DECL|HAL_CAN_ERROR_BR|macro|HAL_CAN_ERROR_BR
DECL|HAL_CAN_ERROR_CRC|macro|HAL_CAN_ERROR_CRC
DECL|HAL_CAN_ERROR_EPV|macro|HAL_CAN_ERROR_EPV
DECL|HAL_CAN_ERROR_EWG|macro|HAL_CAN_ERROR_EWG
DECL|HAL_CAN_ERROR_FOR|macro|HAL_CAN_ERROR_FOR
DECL|HAL_CAN_ERROR_NONE|macro|HAL_CAN_ERROR_NONE
DECL|HAL_CAN_ERROR_STF|macro|HAL_CAN_ERROR_STF
DECL|HAL_CAN_STATE_BUSY_RX|enumerator|HAL_CAN_STATE_BUSY_RX = 0x22, /*!< CAN process is ongoing */
DECL|HAL_CAN_STATE_BUSY_TX_RX|enumerator|HAL_CAN_STATE_BUSY_TX_RX = 0x32, /*!< CAN process is ongoing */
DECL|HAL_CAN_STATE_BUSY_TX|enumerator|HAL_CAN_STATE_BUSY_TX = 0x12, /*!< CAN process is ongoing */
DECL|HAL_CAN_STATE_BUSY|enumerator|HAL_CAN_STATE_BUSY = 0x02, /*!< CAN process is ongoing */
DECL|HAL_CAN_STATE_ERROR|enumerator|HAL_CAN_STATE_ERROR = 0x04 /*!< CAN error state */
DECL|HAL_CAN_STATE_READY|enumerator|HAL_CAN_STATE_READY = 0x01, /*!< CAN initialized and ready for use */
DECL|HAL_CAN_STATE_RESET|enumerator|HAL_CAN_STATE_RESET = 0x00, /*!< CAN not yet initialized or disabled */
DECL|HAL_CAN_STATE_TIMEOUT|enumerator|HAL_CAN_STATE_TIMEOUT = 0x03, /*!< CAN in Timeout state */
DECL|HAL_CAN_StateTypeDef|typedef|}HAL_CAN_StateTypeDef;
DECL|IDE|member|uint32_t IDE; /*!< Specifies the type of identifier for the message that will be received.
DECL|IDE|member|uint32_t IDE; /*!< Specifies the type of identifier for the message that will be transmitted.
DECL|IS_CAN_BANKNUMBER|macro|IS_CAN_BANKNUMBER
DECL|IS_CAN_BS1|macro|IS_CAN_BS1
DECL|IS_CAN_BS2|macro|IS_CAN_BS2
DECL|IS_CAN_DLC|macro|IS_CAN_DLC
DECL|IS_CAN_EXTID|macro|IS_CAN_EXTID
DECL|IS_CAN_FIFO|macro|IS_CAN_FIFO
DECL|IS_CAN_FILTER_FIFO|macro|IS_CAN_FILTER_FIFO
DECL|IS_CAN_FILTER_MODE|macro|IS_CAN_FILTER_MODE
DECL|IS_CAN_FILTER_SCALE|macro|IS_CAN_FILTER_SCALE
DECL|IS_CAN_IDTYPE|macro|IS_CAN_IDTYPE
DECL|IS_CAN_MODE|macro|IS_CAN_MODE
DECL|IS_CAN_PRESCALER|macro|IS_CAN_PRESCALER
DECL|IS_CAN_RTR|macro|IS_CAN_RTR
DECL|IS_CAN_SJW|macro|IS_CAN_SJW
DECL|IS_CAN_STDID|macro|IS_CAN_STDID
DECL|IS_CAN_TRANSMITMAILBOX|macro|IS_CAN_TRANSMITMAILBOX
DECL|Init|member|CAN_InitTypeDef Init; /*!< CAN required parameters */
DECL|Instance|member|CAN_TypeDef *Instance; /*!< Register base address */
DECL|Lock|member|HAL_LockTypeDef Lock; /*!< CAN locking object */
DECL|MSR_REGISTER_INDEX|macro|MSR_REGISTER_INDEX
DECL|Mode|member|uint32_t Mode; /*!< Specifies the CAN operating mode.
DECL|NART|member|uint32_t NART; /*!< Enable or disable the non-automatic retransmission mode.
DECL|Prescaler|member|uint32_t Prescaler; /*!< Specifies the length of a time quantum.
DECL|RF0R_REGISTER_INDEX|macro|RF0R_REGISTER_INDEX
DECL|RF1R_REGISTER_INDEX|macro|RF1R_REGISTER_INDEX
DECL|RFLM|member|uint32_t RFLM; /*!< Enable or disable the Receive FIFO Locked mode.
DECL|RTR|member|uint32_t RTR; /*!< Specifies the type of frame for the message that will be transmitted.
DECL|RTR|member|uint32_t RTR; /*!< Specifies the type of frame for the received message.
DECL|SJW|member|uint32_t SJW; /*!< Specifies the maximum number of time quanta
DECL|State|member|__IO HAL_CAN_StateTypeDef State; /*!< CAN communication state */
DECL|StdId|member|uint32_t StdId; /*!< Specifies the standard identifier.
DECL|StdId|member|uint32_t StdId; /*!< Specifies the standard identifier.
DECL|TSR_REGISTER_INDEX|macro|TSR_REGISTER_INDEX
DECL|TTCM|member|uint32_t TTCM; /*!< Enable or disable the time triggered communication mode.
DECL|TXFP|member|uint32_t TXFP; /*!< Enable or disable the transmit FIFO priority.
DECL|__HAL_CAN_CANCEL_TRANSMIT|macro|__HAL_CAN_CANCEL_TRANSMIT
DECL|__HAL_CAN_CLEAR_FLAG|macro|__HAL_CAN_CLEAR_FLAG
DECL|__HAL_CAN_DBG_FREEZE|macro|__HAL_CAN_DBG_FREEZE
DECL|__HAL_CAN_DISABLE_IT|macro|__HAL_CAN_DISABLE_IT
DECL|__HAL_CAN_ENABLE_IT|macro|__HAL_CAN_ENABLE_IT
DECL|__HAL_CAN_FIFO_RELEASE|macro|__HAL_CAN_FIFO_RELEASE
DECL|__HAL_CAN_GET_FLAG|macro|__HAL_CAN_GET_FLAG
DECL|__HAL_CAN_GET_IT_SOURCE|macro|__HAL_CAN_GET_IT_SOURCE
DECL|__HAL_CAN_MSG_PENDING|macro|__HAL_CAN_MSG_PENDING
DECL|__HAL_CAN_RESET_HANDLE_STATE|macro|__HAL_CAN_RESET_HANDLE_STATE
DECL|__HAL_CAN_TRANSMIT_STATUS|macro|__HAL_CAN_TRANSMIT_STATUS
DECL|__stm32f1xx_CAN_H|macro|__stm32f1xx_CAN_H
DECL|pRxMsg|member|CanRxMsgTypeDef* pRxMsg; /*!< Pointer to reception structure */
DECL|pTxMsg|member|CanTxMsgTypeDef* pTxMsg; /*!< Pointer to transmit structure */
