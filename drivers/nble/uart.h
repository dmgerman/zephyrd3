DECL|IPC_CHANNEL_STATE_CLOSED|macro|IPC_CHANNEL_STATE_CLOSED
DECL|IPC_CHANNEL_STATE_OPEN|macro|IPC_CHANNEL_STATE_OPEN
DECL|IPC_MSG_TYPE_FREE|macro|IPC_MSG_TYPE_FREE
DECL|IPC_MSG_TYPE_MESSAGE|macro|IPC_MSG_TYPE_MESSAGE
DECL|IPC_MSG_TYPE_SYNC|macro|IPC_MSG_TYPE_SYNC
DECL|IPC_PANIC_NOTIFICATION|macro|IPC_PANIC_NOTIFICATION
DECL|IPC_REQUEST_ALLOC_PORT|macro|IPC_REQUEST_ALLOC_PORT
DECL|IPC_REQUEST_DEREGISTER_SERVICE|macro|IPC_REQUEST_DEREGISTER_SERVICE
DECL|IPC_REQUEST_INFRA_PM|macro|IPC_REQUEST_INFRA_PM
DECL|IPC_REQUEST_LOGGER|macro|IPC_REQUEST_LOGGER
DECL|IPC_REQUEST_POWER_MANAGEMENT|macro|IPC_REQUEST_POWER_MANAGEMENT
DECL|IPC_REQUEST_REGISTER_PROXY|macro|IPC_REQUEST_REGISTER_PROXY
DECL|IPC_REQUEST_REGISTER_SERVICE|macro|IPC_REQUEST_REGISTER_SERVICE
DECL|IPC_REQUEST_REG_TCMD_ENGINE|macro|IPC_REQUEST_REG_TCMD_ENGINE
DECL|IPC_UART_ERROR_DATA_TO_BIG|enumerator|IPC_UART_ERROR_DATA_TO_BIG,
DECL|IPC_UART_ERROR_OK|enumerator|IPC_UART_ERROR_OK = 0,
DECL|IPC_UART_MAX_CHANNEL|macro|IPC_UART_MAX_CHANNEL
DECL|IPC_UART_RESULT_CODES|enum|enum IPC_UART_RESULT_CODES {
DECL|IPC_UART_TX_BUSY|enumerator|IPC_UART_TX_BUSY
DECL|cb|member|int (*cb)(int chan, int request, int len, void *data);
DECL|channel|member|uint8_t channel; /**< Channel number of IPC message. */
DECL|index|member|uint16_t index;
DECL|ipc_uart_channels|struct|struct ipc_uart_channels {
DECL|ipc_uart_header|struct|struct ipc_uart_header {
DECL|len|member|uint16_t len; /**< Length of IPC message. */
DECL|src_cpu_id|member|uint8_t src_cpu_id; /**< CPU id of IPC sender. */
DECL|state|member|uint16_t state;
